#!/usr/bin/env ruby

# Install hooks:
#   cd .git
#   rm -fr hooks
#   ln -s ../git_hooks hooks

#
# This hook is called by git-commit with no arguments.
# The hook should exit with non-zero status after issuing
# an appropriate message if it wants to stop the commit.
#

$KCODE = 'u' if RUBY_VERSION.start_with?('1.8')

# what we are going to commit?
diff = `git diff-index --unified=0 -M --cached HEAD`
files, path = {}, ''
in_data = false
diff.each_line do |line|
  # that's a start of output for a new file
  if line =~ /^diff --git a\/.* b\/(.*)$/
    in_data = false
    path = $1
    files[path] = Array.new
    next
  end

  # this marks a start of data
  if line =~ /^@@ .* @@/
    in_data = true
    next
  end

  # add lines introduced by commit
  if in_data and line[0,1] == '+'
    files[path] << line[1, line.size-1]
  end
end
files.delete_if { |path, lines| lines.empty? }

# This code checks tabs and spaces.
errors = {}
files.each_pair do |path, diff|
  errors[path] = {}
  diff.each do |line|
    line.chomp!
    if line =~ /\t/
      errors[path][line] = "This line contains a Tab char. Use Space instead."
    elsif line =~ /\s+$/
      errors[path][line] = "This line ends with whitespace. Remove it."
    elsif line.strip == '=begin'
      errors[path][line] = "This line starts a block comment. Maybe it's better to remove this code or fix this test? " +
                           "Pass -n to git commit to bypass pre-commit hook."
    end
  end
end

# all checks passed
if errors.all? { |path, lines| lines.empty? }
  puts "All clear."
  exit 0
end

# print errors and exit with error code
errors.each_pair do |path, lines|
  puts path
  lines.each do |line, error|
    puts line
    puts error
    puts
  end
  puts "\n---"
end
exit 1
